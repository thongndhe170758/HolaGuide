@page
@model HolaGuide.Pages.Home.UserHomeModel

<link rel="stylesheet" href="~/css/Home/UserHome.css" />

<div class="container">
    <div class="row intro">
        <div class="col-7">
            <h1 class="intro-header">Tìm kiếm dịch vụ tại</h1>
            <h1 class="intro-header">HolaGuide</h1>
            <p style="color: black; font-size: 0.8rem;">Cung cấp thông tin về những gì bạn cần!</p>
            <div class="row">
                <form class="search-bar" method="post">
                    <div class="filter shadow">
                        <i class="fa fa-search"></i>
                        <input type="text" class="form-control filter-input" placeholder="Tìm kiếm dịch vụ của chúng tôi" name="query" value="@Model.SearchKey">
                        <input type="hidden" name="category" value="@Model.SelectedCategory" />
                        <input type="hidden" name="filter" value="@Model.FilterString" />
                        @{
                            if(Model.FilterString.Equals("Gần tôi"))
                            {
                                <input type="hidden" name="latitude" value="@Model.Latitude" />
                                <input type="hidden" name="longitude" value="@Model.Longitude" />
                            }
                        }
                        <span class="left-pan"><i class="fa fa-microphone"></i></span>
                    </div>
                </form>
            </div>
        </div>
        <div class="col-5 d-flex flex-row justify-content-end px-2">
            <img class="avatar shadow" src="/images/logov2.png" />
        </div>
    </div>
</div>
<br />

<div class="container" style="padding: 1rem 0">
    <div class="row main-content">
        <div class="col-2 bordered shadow" style="background-color: white; padding: 0; height: fit-content">
            <div class="w-100 fw-bold" style="font-size: 1.5rem; padding: 0.5rem; color: #162C5B">Khám Phá</div>
            <div class="w-100">
                <ul class="w-100">
                    @foreach (var cat in Model.Categories)
                    {
                        if (cat.Name.Equals(Model.SelectedCategory))
                        {
                            if (Model.FilterString.Equals("Gần tôi"))
                            {
                                <li class="category-selected"><a asp-page="/Home/UserHome" asp-route-query="@Model.SearchKey" asp-route-category="@cat.Name" asp-route-filter="@Model.FilterString" asp-route-longitude="@Model.Longitude" asp-route-latitude="@Model.Latitude">@cat.Name</a><i class="fa-solid fa-angle-right"></i></li>
                            }
                            else
                            {
                                <li class="category-selected"><a asp-page="/Home/UserHome" asp-route-query="@Model.SearchKey" asp-route-category="@cat.Name" asp-route-filter="@Model.FilterString">@cat.Name</a><i class="fa-solid fa-angle-right"></i></li>
                            }
                        }
                        else
                        {
                            if (Model.FilterString.Equals("Gần tôi"))
                            {
                                <li class="category"><a asp-page="/Home/UserHome" asp-route-query="@Model.SearchKey" asp-route-category="@cat.Name" asp-route-filter="@Model.FilterString" asp-route-longitude="@Model.Longitude" asp-route-latitude="@Model.Latitude">@cat.Name</a><i class="fa-solid fa-angle-right"></i></li>
                            }
                            else
                            {
                                <li class="category"><a asp-page="/Home/UserHome" asp-route-query="@Model.SearchKey" asp-route-category="@cat.Name" asp-route-filter="@Model.FilterString">@cat.Name</a><i class="fa-solid fa-angle-right"></i></li>
                            }
                        }
                    }
                </ul>
            </div>
        </div>
        <div class="col bordered">
            <div class="container-fluid" style="background-color: white; padding: 0; border-radius: 8px;">
                <div class="col-6">
                    <ul class="inline-list w-100">
                        <li style="border-top-left-radius: 10px; border-bottom-left-radius: 10px" class="@(Model.FilterString.Equals("Mới nhất") ? "filter-selected" : String.Empty)"><a asp-page="/Home/UserHome" asp-route-query="@Model.SearchKey" asp-route-category="@Model.SelectedCategory" asp-route-filter="Mới nhất">Mới nhất</a></li>
                        <li class="@(Model.FilterString.Equals("Giá rẻ") ? "filter-selected" : String.Empty)"><a asp-page="/Home/UserHome" asp-route-query="@Model.SearchKey" asp-route-category="@Model.SelectedCategory" asp-route-filter="Giá rẻ">Giá rẻ</a></li>
                        <li class="@(Model.FilterString.Equals("Gần tôi") ? "filter-selected" : String.Empty)"><a href="#" id="nearbyService" data-category="@Model.SelectedCategory" @(string.IsNullOrEmpty(Model.SearchKey) ? $"data-query={Model.SearchKey}" : string.Empty)>Gần tôi</a></li>
                        <li class="@(Model.FilterString.Equals("Đã lưu") ? "filter-selected" : String.Empty)"><a asp-page="/Home/UserHome" asp-route-query="@Model.SearchKey" asp-route-category="@Model.SelectedCategory" asp-route-filter="Đã lưu">Đã lưu</a></li>
                    </ul>
                </div>
            </div>
            <div class="container-fluid bordered" style="padding: 0">
                @if (Model.FilterString.Equals("Mới nhất"))
                {
                    @await Component.InvokeAsync("NewestServices",
                    new
                    {
                        categoryName = Model.SelectedCategory,
                        searchKey = Model.SearchKey,
                        filter = Model.FilterString,
                        pageNum = Model.PageNumber
                     })
                }
                else if (Model.FilterString.Equals("Gần tôi"))
                {
                    @await Component.InvokeAsync("NearByServices",
                    new
                    {
                        categoryName = Model.SelectedCategory,
                        searchKey = Model.SearchKey,
                        filter = Model.FilterString,
                        pageNum = Model.PageNumber,
                        longitude = Model.Longitude,
                        latitude = Model.Latitude
                    })
                }
                else if (Model.FilterString.Equals("Đã lưu"))
                {
                    @await Component.InvokeAsync("SavedServices",
                    new
                    {
                        categoryName = Model.SelectedCategory,
                        searchKey = Model.SearchKey,
                        filter = Model.FilterString,
                        pageNum = Model.PageNumber
                    })
                }
                else
                {
                    @await Component.InvokeAsync("NewestServices",
                    new
                    {
                        categoryName = Model.SelectedCategory,
                        searchKey = Model.SearchKey,
                        filter = Model.FilterString,
                        pageNum = Model.PageNumber
                    })
                }
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.Message))
{
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="myModalLabel">Thông báo</h5>
                </div>
                <div class="modal-body">
                    @Model.Message
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="closeModalBtn" data-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            $('#myModal').modal('show');
        });
        $('#closeModelBtn').Click(function () {
            $('#myModel').modal('hide');
        })
    </script>
}

<script>
    var link = $('#nearbyService');
    link.click(function () {
        if ("geolocation" in navigator) {
            // Geolocation is supported
            navigator.geolocation.getCurrentPosition(
                function (position) {
                    // Success callback
                    console.log('success');
                    const userLatitude = position.coords.latitude;
                    const userLongitude = position.coords.longitude;
                    var category = link.data('category');
                    var query = link.data('query');

                    let href;
                    if(query === null){
                        href = "/Home/UserHome?category=" + category + "&filter=Gần tôi&longitude=" + userLongitude + "&latitude=" + userLatitude
                    }
                    else{
                        href = "/Home/UserHome?category=" + category + "&filter=Gần tôi&query="+query+"&longitude=" + userLongitude + "&latitude=" + userLatitude
                    }
                    
                    link.attr('href', href);
                    window.location.href = link.attr('href');
                },
                function (error) {
                    // Error callback
                    switch (error.code) {
                        case error.PERMISSION_DENIED:
                            console.error("User denied the request for Geolocation.");
                            break;
                        case error.POSITION_UNAVAILABLE:
                            console.error("Location information is unavailable.");
                            break;
                        case error.TIMEOUT:
                            console.error("The request to get user location timed out.");
                            break;
                        case error.UNKNOWN_ERROR:
                            console.error("An unknown error occurred.");
                            break;
                    }
                }
            );
        } else {
            // Geolocation is not supported
            console.error("Geolocation is not supported by this browser.");
        }
    })
</script>
